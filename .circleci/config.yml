version: 2.1

references: 
  working_dir: &working_dir /tmp/workspace/farmsmart
  
  functions_dir: &functions_dir /tmp/workspace/farmsmart/functions

  rules_dir: &rules_dir /tmp/workspace/farmsmart/rules

  workspace: &workspace /tmp/workspace

  restore_workspace: &restore_workspace
    attach_workspace:
      at: *workspace

  save_workspace: &save_workspace
    persist_to_workspace:
      root: *workspace
      paths:
        - farmsmart

executors:
  gcp-firebase:
    docker:
      - image: farmsmart/gcp-firebase
    working_directory: *working_dir
  gcp-firebase-emulator:
    docker:
      - image: farmsmart/gcp-firebase-emulator
    working_directory: *working_dir

jobs:
  build:
    executor: gcp-firebase
    steps:
      - checkout
      - run:
          name: "pull submodules"
          command: |
            git submodule update --init --recursive --remote
      
      - run:
          working_directory: *functions_dir
          name: Install dependencies for cloud function
          command: | 
            npm install firebase-admin@latest firebase-functions@latest
            npm install

      - run:
          working_directory: *rules_dir
          name: Install dependencies for rules
          command: |
            npm install

      - *save_workspace
    
  test-functions:
    executor: gcp-firebase
    steps:
      - *restore_workspace
      - run:
          working_directory: *functions_dir
          name: Run unit tests on cloud functions
          command: |
            npm run-script lint
            npm run-script test:ci
      - store_test_results:
          path: /tmp/workspace/farmsmart/functions/reports

  test-rules:
    executor: gcp-firebase-emulator
    steps:
      - *restore_workspace
      - run: 
          name: Start firestore emulator in the background
          background: true
          command: |
            firebase serve --only firestore
      - run:
          working_directory: *rules_dir
          name: Run rules unit test 
          command: |
            sleep 5
            npm run-script test


  deploy:
    executor: gcp-firebase
    steps:
      - *restore_workspace

      - run:
          working_directory: *functions_dir
          name: Inject credential for spreadsheet user
          command: |
            set -euo pipefail
            secrets_dir='.credentials'
            mkdir -p ${secrets_dir}
            echo ${SHEETS_SERVICE_ACCOUNT} | base64 -di > ${secrets_dir}/recommendations-service-account.json

      - run:
          working_directory: *working_dir
          name: Deploy to firebase project
          command: |
            set -euo pipefail
            echo "Set firebase project cloud function configs"
            
            firebase functions:config:set --token $FIREBASE_TOKEN --project $FIREBASE_PROJECT farmsmart.sheets.api.key=${SHEETS_API_KEY}
            firebase functions:config:set --token $FIREBASE_TOKEN --project $FIREBASE_PROJECT farmsmart.scorematrix.doc.id=${SCORE_DOC_ID}
            firebase functions:config:set --token $FIREBASE_TOKEN --project $FIREBASE_PROJECT farmsmart.slack.api.token=${SLACK_FARMSMART_TOKEN}

            echo "Deploy all FireBase artifacts (cloud functions, rules, hosting)"
            
            firebase deploy --token $FIREBASE_TOKEN --project $FIREBASE_PROJECT --force


  verify-deployment:
    executor: gcp-firebase
    steps:
      - run:
          name: Verify that deployment is successful
          command: | 
            set -euo pipefail

            curl --silent "${BULKUPLOAD_URL}?sheetId=${SCORE_DOC_ID}" | grep -v FAILED

workflows:
  version: 2
  backend:
    jobs:
      - build
      - test-functions:
          requires:
            - build
      - test-rules:
          requires:
            - build
      - deploy:
          # Deploys feature branches to gcp project
          name: deploy-gcp-feature
          context: gcp-feature
          requires:
            - test-functions
            - test-rules
          filters:
            branches:
              only:
                - /feature.*/
      - deploy:
          # Deploys develop branch to gcp project
          name: deploy-gcp-dev
          context: gcp-dev
          requires:
            - test-functions
            - test-rules
          filters:
            branches:
              only:
                - develop
      - deploy:
          # Deploys release branches to gcp project
          name: deploy-gcp-stage
          context: gcp-stage
          requires:
            - test-functions
            - test-rules
          filters:
            branches:
              only:
                - /release.*/
      - deploy:
          # Deploys master to gcp project
          name: deploy-gcp-prod
          context: gcp-prod
          requires:
            - test-functions
            - test-rules
          filters:
            branches:
              only:
                - master

      # Smoke testing
      - verify-deployment:
          name: verify-feature
          context: gcp-feature
          requires:
            - deploy-gcp-feature

      - verify-deployment:
          name: verify-dev
          context: gcp-dev
          requires:
            - deploy-gcp-dev

      - verify-deployment:
          name: verify-stage
          context: gcp-stage
          requires:
            - deploy-gcp-stage

      - verify-deployment:
          name: verify-prod
          context: gcp-prod
          requires:
            - deploy-gcp-prod
